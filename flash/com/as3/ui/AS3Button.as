package com.as3.ui{	import flash.events.MouseEvent;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.text.TextField;	import flash.display.InteractiveObject;	import com.as3.ui.AS3MouseTip;	import com.as3.utils.AS3Event;	public class AS3Button extends Sprite	{		//按钮文本框		private var _label_txt:TextField;		//按钮文字		private var _label_str:String;		//按钮提示		private var _tip_str:String;		//按钮提示		private var _mouseTip_mt:AS3MouseTip;		//按钮标识		private var _btn_id:String;		//皮肤		private var _skin_mc:MovieClip;		private var _releaseOutFlag_boo:Boolean;		private var _enabled_boo:Boolean=true;		private var _target:*;		public function AS3Button(obj:Object)		{			super();			init(obj);		}		public function init(obj:Object):void		{			_label_str = obj.label;			_tip_str = obj.tip;			_btn_id = obj.id;			_mouseTip_mt=obj.mouseTip;			_target=obj.target!=undefined ? obj.target : this;			_skin_mc=obj.skin;			_skin_mc.x=0;			_skin_mc.y=0;			if(_skin_mc!=null)			{				_skin_mc.gotoAndStop(1);				addChild(_skin_mc);			}			_target.buttonMode=true;			_target.mouseChildren=false;			_target.useHandCursor=true;			_target.doubleClickEnabled=true;			addEvent();		}		private function addEvent():void		{			_target.addEventListener(MouseEvent.MOUSE_DOWN,downHandler);			_target.addEventListener(MouseEvent.MOUSE_OVER,overHandler);			_target.addEventListener(MouseEvent.MOUSE_UP,upHandler);			_target.addEventListener(MouseEvent.MOUSE_OUT,outHandler);			//_target.addEventListener(MouseEvent.MOUSE_MOVE,moveHandler);			_target.addEventListener(MouseEvent.DOUBLE_CLICK,doubleHandler);		}		private function removeEvent():void		{			_target.removeEventListener(MouseEvent.MOUSE_DOWN,downHandler);			_target.removeEventListener(MouseEvent.MOUSE_OVER,overHandler);		    _target.removeEventListener(MouseEvent.MOUSE_UP,upHandler);			_target.removeEventListener(MouseEvent.MOUSE_OUT,outHandler);			//_target.removeEventListener(MouseEvent.MOUSE_MOVE,moveHandler);			_target.removeEventListener(MouseEvent.DOUBLE_CLICK,doubleHandler);		}		//鼠标滑过		private function overHandler(evt:MouseEvent):void		{		    if(_skin_mc!=null){_skin_mc.gotoAndStop(2);}			//dispatch(MouseEvent.MOUSE_OVER);		    if(_tip_str!=null)			{			    _mouseTip_mt.showTip(_tip_str);			    addChild(_mouseTip_mt);			}					}		//按钮按下事件		private function downHandler(evt:MouseEvent):void		{			_releaseOutFlag_boo=true;			if(_skin_mc!=null){_skin_mc.gotoAndStop(3);}			//dispatch(MouseEvent.MOUSE_DOWN);			//_target.stage.addEventListener( MouseEvent.MOUSE_UP, onStageMouseUp );		}		//按钮点击事件		private function upHandler(evt:MouseEvent):void		{			_releaseOutFlag_boo=false;			if(_skin_mc!=null){_skin_mc.gotoAndStop(1);}			//存在直接从外部点入按钮，焦点不在按钮上的问题			//if( _target.stage.focus == _target )			dispatch( AS3Event.BUTTON_CLICK );			//evt.currentTarget.removeEventListener( MouseEvent.MOUSE_UP, onStageMouseUp );		}		//舞台UP事件		private function onStageMouseUp( evt: MouseEvent ): void		{			evt.currentTarget.removeEventListener( MouseEvent.MOUSE_UP, onStageMouseUp );			if(_releaseOutFlag_boo && _target.stage.focus == _target)			{				dispatch( AS3Event.BUTTON_OVERCLICK);				//trace("evt:"+evt.currentTarget);			}		}		//鼠标移出按钮区域		private function outHandler(evt:MouseEvent):void		{			if(_skin_mc!=null){_skin_mc.gotoAndStop(1);}			//dispatch(MouseEvent.MOUSE_OUT);			if(_tip_str!=null)			{			    _mouseTip_mt.removeTip();			    removeChild(_mouseTip_mt);			}					}		//鼠标移动		/*private function moveHandler(evt:MouseEvent):void		{			dispatch(MouseEvent.MOUSE_MOVE,{localX:evt.localX});		}*/		//鼠标双击		private function doubleHandler(evt:MouseEvent):void		{			dispatch(AS3Event.BUTTON_DOUBLECLICK);		}		//设置按钮状态		public function set enabled(boo:Boolean):void		{			if(_enabled_boo!=boo)			{				_enabled_boo=boo;				if (boo)			    {                    _target.buttonMode=true;				    _target.useHandCursor=true;				    if(_skin_mc!=null){_skin_mc.gotoAndStop(1);}				    addEvent();			    }			    else			    {				    _target.buttonMode=false;				    _target.useHandCursor=false;				    if(_skin_mc!=null){_skin_mc.gotoAndStop(4);}				    removeEvent();			    }			}					}		//enabled geter		public function get enabled():Boolean		{			return _enabled_boo;		}		//skin geter		public function get skin():MovieClip		{			return _skin_mc;		}		/*public function get x():int		{			return _skin_mc.x;		}*/		//事件广播函数	    public function dispatch(type):void	    {			var mouseEvent:AS3Event=new AS3Event(type, _btn_id);		    _target.dispatchEvent(mouseEvent);	    }	}}